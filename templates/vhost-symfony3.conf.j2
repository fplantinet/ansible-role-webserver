# {{ ansible_managed }}
{% set project = item.0 %}
{% set vhost = item.1 %}

server {
    listen *:80;
    # listen [::]:80 ipv6only=on;

{% if vhost.ssl %}
    listen *:443 ssl;
    # listen [::]:443 ssl ipv6only=on;
{% endif %}

    server_name {{ vhost.server_names }};

{% if vhost.ssl %}
    ssl on;
    {% if vhost.cert.chain %}
    ssl_certificate {{ vhost.cert.chain }};
    {% else %}
    ssl_certificate {{ vhost.cert.crt }};
    {% endif %}
    ssl_certificate_key {{ vhost.cert.key }};
{% endif %}

    root {{ vhost.root_dir }};

    error_log {{ vhost.log_dir }}error.log;
    access_log {{ vhost.log_dir }}access.log;

    index index.php;
    autoindex off;
    charset off;

    add_header 'X-Content-Type-Options' 'nosniff';
    add_header 'X-XSS-Protection' '1; mode=block';

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }

    {% if vhost.env == 'dev' %}
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass   unix:/var/run/{{monsieurbiz_webserver_php_name}}-fpm__{{ item.0.user }}-{{ item.1.identifier }}.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param  PHP_VALUE "memory_limit=256M \n max_execution_time=600";
        fastcgi_read_timeout 600s;
        fastcgi_connect_timeout 600s;

        fastcgi_param  DEVELOPER_MODE 1;
        fastcgi_param  ENV_TYPE {{ vhost.env }};

        include fastcgi_params;
    }
    {% endif %}

    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass   unix:/var/run/{{monsieurbiz_webserver_php_name}}-fpm__{{ item.0.user }}-{{ item.1.identifier }}.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param  PHP_VALUE "memory_limit=256M \n max_execution_time=600";
        fastcgi_read_timeout 600s;
        fastcgi_connect_timeout 600s;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;

        fastcgi_param  ENV_TYPE {{ vhost.env }};

        include fastcgi_params;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

}
